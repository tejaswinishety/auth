import com.authlete.jaxrs.AuthorizationPageModel;
import com.authlete.jaxrs.server.util.ExceptionUtil;
import com.authlete.jaxrs.server.util.ProcessingUtil;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonParser;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.nimbusds.jose.shaded.gson.Gson;
import com.nimbusds.jose.shaded.gson.GsonBuilder;
import com.nimbusds.jose.shaded.gson.JsonParseException;
public class CredentialPage extends AuthorizationPageModel
{
    private final long serialVersionUID = 20;
    private final String de_en = "openid-credential-offer://";
    private  final String cre = "%s;
    private final String Cre = "%s;
    private final int Qrwidth = 1;
    private String credentials;
    private boolean userpincode;
    private int userpinlength;
    private int duration;
    
public class CredentialPage extends AuthorizationPageModel
{
    private final versionUID = 20;
    private final String de_en = "openid-credential-offer://";
    private  final String cre = "%s;
    private final String Cre = "%s;
    private final int Qrwidth = 1;
    private String credentials;
    private boolean userpincode;
    private int userpinlength;
    private int duration;

     private Integer extractInt(final Map<String, String> values,
                               final String key, final Integer def)
    {
        final String value = values.getOrDefault(key, Integer.toString(def));
        try
        {
            final Integer intVal = Integer.parseInt(value);
            if (intVal < 0)
            {
                throw ExceptionUtil.badRequestException(
                        String.format("%s should be positive.", key));
            }
            return intVal;
        }
        catch (NumberFormatException e)
        {
            throw ExceptionUtil.badRequestException(
                    String.format("%s should be a number.", key));
        }
    }
     public CredentialOfferCreateRequest toRequest(final User user)
    {
        return new CredentialOfferCreateRequest()
                .setAuthorizationCodeGrantIncluded(this.authorizationCodeGrantIncluded)
                .setIssuerStateIncluded(this.issuerStateIncluded)
                .setPreAuthorizedCodeGrantIncluded(this.preAuthorizedCodeGrantIncluded)
                .setUserPinRequired(this.userPinRequired)
                .setUserPinLength(this.userPinLength)
                .setDuration(this.duration)
                .setCredentials(this.credentials)
                .setSubject(user.getSubject());
    }
    public String getCredentials()
    {
        return credentials;
    }
    public void setCredentials(String credentials)
    {
        this.credentials = credentials;
    }
    public boolean isUserPinRequired()
    {
        return userPinRequired;
    }
      public void setUserPinRequired(boolean userPinRequired)
    {
        this.userPinRequired = userPinRequired;
    }
    public int getUserPinLength()
    {
        return userPinLength;
    }
    public void setUserPinLength(int userPinLength)
    {
        this.userPinLength = userPinLength;
    }
     public int getDuration()
    {
        return duration;
    }
    public void setDuration(int duration)
    {
        this.duration = duration;
    }
    public String getCredentialOfferEndpoint()
    {
        return credentialOfferEndpoint;
    }
     public String getCredentialOfferLink()
    {
        return credentialOfferLink;
    }
    public void setCredentialOfferLink(String credentialOfferLink)
    {
        this.credentialOfferLink = credentialOfferLink;
    }
    public String getCredentialOfferQrCode()
    {
        return credentialOfferQrCode;
    }
    public void setCredentialOfferQrCode(String credentialOfferQrCode)
    {
        this.credentialOfferQrCode = credentialOfferQrCode;
    }
    public String getCredentialOfferContent()
    {
        return credentialOfferContent;
    }
    public void setCredentialOfferContent(String credentialOfferContent)
    {
        this.credentialOfferContent = credentialOfferContent;
    }
    public String getCredentialOfferUriLink()
    {
        return credentialOfferUriLink;
    }
    public void setCredentialOfferUriLink(String credentialOfferUriLink)
    {
        this.credentialOfferUriLink = credentialOfferUriLink;
    }
    public String getCredentialOfferUriQrCode()
    {
        return credentialOfferUriQrCode;
    }
    public void setCredentialOfferUriQrCode(String credentialOfferUriQrCode)
    {
        this.credentialOfferUriQrCode = credentialOfferUriQrCode;
    }
}

 



~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
auth[+] [unix] (05:29 01/01/1970)                                                                                                                                                                         30,5 All
-- INSERT --


